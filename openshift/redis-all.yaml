apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: "2020-10-16T20:25:39Z"
    generation: 3
    labels:
      template: redis-ephemeral-template
      template.openshift.io/template-instance-owner: ba8ac31b-c080-4ad8-97eb-bc9bee2f22ac
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.alpha.openshift.io/wait-for-ready: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:name: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:recreateParams:
              .: {}
              f:timeoutSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"redis"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6379,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/redis/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"redis-data"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-10-16T22:23:14Z"
    name: redis
    namespace: workspace
    resourceVersion: "888099"
    selfLink: /apis/apps.openshift.io/v1/namespaces/workspace/deploymentconfigs/redis
    uid: 86ce5ca7-b957-412e-a7be-49eb80c54e7c
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: redis
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: redis
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:f3cf80b8dd897d008ed83b33662e869d397534218c0d436536a0673cadbd8bbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - redis
        from:
          kind: ImageStreamTag
          name: redis:5
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:f3cf80b8dd897d008ed83b33662e869d397534218c0d436536a0673cadbd8bbf
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-10-16T22:23:00Z"
      lastUpdateTime: "2020-10-16T22:23:00Z"
      message: replication controller "redis-2" has failed progressing
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    - lastTransitionTime: "2020-10-16T22:23:14Z"
      lastUpdateTime: "2020-10-16T22:23:14Z"
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 2
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: redis://{.spec.clusterIP}:{.spec.ports[?(.name=="redis")].port}
    creationTimestamp: "2020-10-16T20:25:39Z"
    labels:
      template: redis-ephemeral-template
      template.openshift.io/template-instance-owner: ba8ac31b-c080-4ad8-97eb-bc9bee2f22ac
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.openshift.io/expose-uri: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":6379,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-10-16T20:25:39Z"
    name: redis
    namespace: workspace
    resourceVersion: "867563"
    selfLink: /api/v1/namespaces/workspace/services/redis
    uid: 4abe536a-7fd2-44a2-8c13-3a5f93758ef5
  spec:
    clusterIP: 172.25.13.174
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      name: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    database-password: cmVkaXM=
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: '{.data[''database-password'']}'
    creationTimestamp: "2020-10-16T20:25:39Z"
    labels:
      template: redis-ephemeral-template
      template.openshift.io/template-instance-owner: ba8ac31b-c080-4ad8-97eb-bc9bee2f22ac
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:database-password: {}
        f:metadata:
          f:annotations:
            .: {}
            f:template.openshift.io/expose-password: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-10-16T20:25:39Z"
    name: redis
    namespace: workspace
    resourceVersion: "867561"
    selfLink: /api/v1/namespaces/workspace/secrets/redis
    uid: 3b742748-0876-46f8-bb8a-c9af19c6efc8
  type: Opaque
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
